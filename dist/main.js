/**
 * @author Alex Bruno CÃ¡ceres
 * @email git.alexbr@outlook.com
 * @date 2016-06-25 03:14:48
 * @desc Simple JS module for Promise and Fetch APIs, with some useful abstraction
 */

(function(a,b){"object"==typeof exports&&"undefined"!=typeof module?module.exports=b():"function"==typeof define&&define.amd?define(b):a.asyncs=b()})(this,function(){"use strict";function a(a,b){return b={exports:{}},a(b,b.exports),b.exports}var b="undefined"==typeof window?"undefined"==typeof global?"undefined"==typeof self?{}:self:global:window,c=a(function(a){(function(b,c){a.exports=c()})(b,function(){return function(b){return{get value(){return b},serialize(f,i){const{value:b}=this,a=Object.keys(f||b),c=a.map(c=>{const a=i?`${i}['${c}']`:c,d=i?i.replace(/\[\'/g,".").replace(/\'\]/g,""):c,e=i?`${d}.${c}`:c,f=e.split(".").reduce((c,b)=>c[b],b),g=f instanceof Object;return g?this.serialize(f,a):[a,f].join("=")});return c.join("&").replace(/\'/g,"")},parse(){const j={},{value:a}=this,b=a.startsWith("?")?a.substr(1):a,c=b.replace(/(;+|&+)/g,"&").split("&");return c.forEach(a=>{let[b,c]=a.split("=").map(decodeURIComponent);if(!b)return 0;if(c=c?isNaN(c)?c:new Number(c).valueOf():null,!b.includes("["))return j[b]=j.hasOwnProperty(b)?Array.isArray(j[b])?j[b].push(c):[j[b],c]:c;let[k,e]=b.split("["),f=e?e.replace("]",""):0,g=!isNaN(f),h=f?g?parseInt(f):f:0;return j[k]=j.hasOwnProperty(k)?j[k]:g?[]:{},h?j[k][h]=c:j[k].push(c)}),j},form(){let{value:d}=this;if("undefined"==typeof FormData)return console.error("FormData not supported");if(d instanceof FormData)return d;if("undefined"!=typeof HTMLFormElement&&d instanceof HTMLFormElement)return new FormData(d);"string"==typeof d&&(d=this.parse());const e=new FormData;try{Object.keys(d).forEach(a=>{e.append(a,d[a])})}catch(b){console.error(b.message)}return e}}}})}),d=a(function(a){(function(b,c){a.exports=c()})(b,function(){return function(b){return{get isDefined(){return void 0!==b},get isNull(){return null===b},get isNotNull(){return null!==b},get isValid(){return this.isDefined&&this.isNotNull},get instance(){return this.isValid?b.constructor.name:this.isNull?"Null":"Undefined"},get isBoolean(){return"Boolean"===this.instance},get isString(){return"String"===this.instance},get isNumber(){return"Number"===this.instance},get isInteger(){return this.isNumber&&b===parseInt(b)},get isFloat(){return this.isNumber&&b!==parseInt(b)},get isObject(){return"Object"===this.instance},get isArray(){return Array.isArray(b)},get isDate(){return"Date"===this.instance},get isRegExp(){return"RegExp"===this.instance},get isFunction(){return"Function"===this.instance},get value(){return b},is(b){return"Integer"===b?this.isInteger:"Float"===b?this.isFloat:this.instance===b},valueOf(){return b},toString(){return b.toString()}}}})}),e={exec:a=>new Promise(a),execAll(a){return Promise.all(this.tasks(a))},execRace(a){return Promise.race(this.tasks(a))},tasks(a){return a.map(a=>a instanceof Promise?a:a instanceof Function?this.exec(a):Promise.resolve(a))},asap(a,...b){const c="undefined"!=typeof setImmediate;return c?setImmediate(a,...b):setTimeout(a,1,...b)},fetch(a,b={}){if(b.method=b.method?b.method.toLowerCase():"get","get"===b.method){const d=b.body?c(b.body).serialize():"";a+=d?`?${d}`:"",delete b.body}else{const a=b.headers||{},e=Object.values(a).find(a=>/content-type/i.test(a)),f=a[e];b.body="application/json"===f?d(b.body).isObject?JSON.stringify(b.body):b.body:"application/x-www-form-urlencoded"===f?c(b.body).serialize():c(b.body).form()}return fetch(a,b).then(a=>{if(a.ok&&200<=a.status&&300>a.status)return a;const b=new Error(a.statusText);return b.response=a,Promise.reject(b)})},fetchAll(a,b,c="fetch"){return this.execAll(a.map(a=>this[c](a,b)))},fetchRace(a,b,c="fetch"){return this.execRace(a.map(a=>this[c](a,b)))},json(a,b){return this.fetch(a,b).then(a=>a.json())},text(a,b){return this.fetch(a,b).then(a=>a.text())},blob(a,b){return this.fetch(a,b).then(a=>a.blob())},bool(a,b){return this.text(a,b).then(JSON.parse).then(Boolean)},num(a,b){return this.text(a,b).then(Number)},float(a,b){return this.num(a,b).then(parseFloat)},int(a,b){return this.num(a,b).then(parseInt)},xml(a,b){return this.text(a,b).then(a=>{const b=new DOMParser;return b.parseFromString(a,"application/xml")})},html(a,b){return this.text(a,b).then(a=>{const b=new DOMParser;return b.parseFromString(a,"text/html")})}};return e});